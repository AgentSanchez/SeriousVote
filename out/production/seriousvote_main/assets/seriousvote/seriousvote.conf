config:{
  config-version: "4.0"
  #//Variables - {player} : the person who voted
  #//            {rewards} : The list of random rewards the player received

  #//Leaving this empty will disable messages from being shown publicly: Supports color and formatting codes
  broadcast-message: "&4{player} &eJust Voted! He got {rewards}! If you like it here show your support! &6run &5/vote"

  #//-1 will have the system select a number of rewards between rewards-min and rewards-max;
  random-rewards-number: -1
  rewards-min:1
  rewards-max:3
  #// Under random You can set The tables you would like to use with weights in front for there to be a random chance of choosing from a table.
  #//In the case that there is only one table it will be chosen.
  vote-reward:{
    random:[
      "1", "TableCommon",
      "1", "TableClaims",
      "2", "TableYearly"
    ]
    set:["command 1", "command 2", "command 3"]
  }
  //# Tables are groups of rewards which work as a weighted system. Below are two small examples, but they are very simple and not too elaborate.
  //# Much like the rewards above, the Tables are re-usable. As a matter of fact the Tables are needed by all "Random" rewards areas.
  //# They are pretty basic to use, Give it an id (no two id's should be the same) and then make a list with alternating weights and reward ids
  //# The weights are pretty simple to use, the higher number a reward has the likelier it is to be chosen. in the TableCommon below 'money1' has
  //#  25/125 chances to be chosen. You can use this to make common, rare , and super rare (etc...) tables which can be used together when you
  //# want more control over what is being given out.

  Tables {

    TableCommon: [
      "70", "tomahawk",
      "25", "money1"
    ]

    TableYearly: [

      "1", "gold2"
    ]

    TableClaims: [
      "1", "claimblocks"
    ]

    TableMonthly: [
      "1", "claimblocks"
    ]
    TableWeekly:[
      "1", "money1"
    ]

  }


  //#Each Reward Requires an id "which is the descriptor / identifier such as tomahawk: in the tomahawk reward
  //# After each Reward requires a name key, and a reward key
  //# The value for name is just a text String (This can be used to Call it out in the broadcast built in)
  //#The value for the rewards string is a list of strings. Each String should be a full command and can include the standard variables
  //# Each new command string needs a comma before it. If your command requires quotations make sure to add escape characters
  //#-----i.e ----"hello how "are" you"---- is not valid the string should be escaped as follows
  //#         ----"hello how \"are\" you---- The backslash allows the " to be escaped to be ignored by the parser
  //#
  //# Every single Reward should have it's id be unique, i.e there should not be more than one tomahawk ect... The name of the items can
  //# be duplicated though, so a tomahawk1, and a tomahawk2, can have "Steel Tomahawk" as the name"

  Rewards {

    tomahawk: {
      name: "Steel Tomahawk"
      rewards: [
        "give {player} modernweapons:steel_tomahawk 1",
        "message {player} MeHrRrr, Stabby Stabb"
      ]
    }

    yearly: {
      name: "Yearly Reward"
      rewards: [
        "give {player} minecraft:diamond 5",
        "say {player} is really frk'n dedicated"
      ]
    }

    gold2: {
      name: "Gold Ingots"
      rewards: [
        "give {player} minecraft:gold_ingot 2"
      ]

    }

    money1: {
      name: "A little cash"
      rewards:[
        "adminpay {player} 100"
      ]
    }

    claimblocks: {
      name: "50 Claim Blocks"
      rewards: [
        "acb {player} 50"
      ]
    }

    banana: {
      name: "Banana"
      rewards: [
        "say {player} is a banana"
      ]

    }



  }

  #//This Message will Show above the Links.
  vote-sites-message: "&6Thank You! Below are the places you can vote"

  #// Your website voting links, displayed by /vote, these support color formatting. Creates clickable links.
  #//seriousvotes.commands.vote
  vote-sites:[
    "&4http://&evoteSiteOne.com/v&4ote",
    "http://voteSiteTwo.com/vote",
    "&4http://&5voteSiteThree.com/vote"
  ]


  #// The Milestones Module Requires a Mysql System Setup
  database:{
    hostname: "127.0.0.0"
    port: "3306"
    name: "COT_SeriousVote"
    prefix: "SV_"
    username: "root"
    password: "You need a password"
  }

  #// Currently we have monthly weekly and yearly, put what you need in the set rewards. these commands will be run
  #// When a player votes X amount of days in a row, 365,30, 7
  dailies: {
    enabled: false

    weekly: {
      message: "This person has earned a 7 day in a row Reward!"
      random:[
        "27", "TableWeekly"
      ]
      set:[
        "say This is a set weekly {player} Reward",
      ]
    }
    monthly: {
      message: "This person has earned a monthly vote Reward!"
      random:[
        "27", "TableMonthly"
      ]
      set:[
        "say This is a set Monthly {player} Reward",
        "acb {player} bananaphone"
      ]
    }
    yearly: {
      message: "This person has earned a one year of straight voting reward"
      random:[
        "27", "TableYearly"
      ]
      set:[
        "say This is a set Yearly {player} Reward",
        "say Crap, you must play alot"
      ]
    }
  }


  milestones: {
    enabled: false
    #//place the number of votes you'd like to enable milestones for inside the brackets separated by commas.
    records-enabled:["100","1","37"]
    #// The setup for these is just the same as the normal voting. The tables must be defined in the table section in order for them to be used.
    records:{
      100:{
        message: "&4{player} has voted for a 100th time in a row!"
        random:[
          "27", "claimblocks"
        ]
        set: []
      }
      1:{
        random:[]
        set: ["one command","two command", "three command", "floor"]
      }

    }

  }
}
